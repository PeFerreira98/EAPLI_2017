
title SRR-06-MealBooking-SD-showMeal-v5


CafeteriaUser->BookingUi: chose meal
note over BookingUi: <<interface: observer>> 

BookingUi-->*ShowMealInfoBookingController: create(Observer ui)
BookingUi->ShowMealInfoBookingController: obtainNutricionalInfo(meal)
ShowMealInfoBookingController->Meal: getDish()
ShowMealInfoBookingController->Dish: nutricionalInfo()
ShowMealInfoBookingController-->>BookingUi: NutricionalInfo [final]
BookingUi-->>CafeteriaUser: show nutricionalInfo

BookingUi->ShowMealInfoBookingController: obtainListAllergen(meal)
ShowMealInfoBookingController->Meal: getDish()
ShowMealInfoBookingController->Dish: dishAllergens() ????
ShowMealInfoBookingController-->>BookingUi: List <DishAllergens>
BookingUi-->>CafeteriaUser: show all DishAllergens



BookingUi->ShowMealInfoBookingController: isAllergic(meal)
note over AllergyDetectionService: <<interface: Obserbable>>
ShowMealInfoBookingController->>ShowMealInfoBookingController: obtainCurrentCafeteriaUser()
ShowMealInfoBookingController->AllergyDetectionService: addObserver(ui)
ShowMealInfoBookingController->AllergyDetectionService: isCafeteriaUserAllergicToMeal(cafeteriaUser , meal)
AllergyDetectionService->>AllergyDetectionService: setChanged()
AllergyDetectionService->>AllergyDetectionService: notifyObservers() 
note right of AllergyDetectionService: TO DO: waiting allergen implementation
AllergyDetectionService-->>ShowMealInfoBookingController: boolean answer
ShowMealInfoBookingController-->>BookingUi: boolean answer
BookingUi-->>CafeteriaUser: show Allergen warning

BookingUi->ShowMealInfoBookingController: returnWeekInfo(meal)
ShowMealInfoBookingController->MealNutritionalConsumptionService: planedWeekConsumption(cafeteriaUser, meal)
MealNutritionalConsumptionService->>MealNutritionalConsumptionService: planedDayConsumption(cateferiaUser, day)
MealNutritionalConsumptionService-->>ShowMealInfoBookingController: NutricionalInfo [final]
note right of MealNutritionalConsumptionService
Obter todos os booking do 
CafeteriaUser que ocorrem 
na semana da meal que 
estamos a fazer booking

Obter lista de nutricionalInfo
de cada um deles e da meal que
queremos reservar.

Adicionar os valores, criar um 
novo nutricionalInfo com a soma
destes valores que devolvemos.
end note
ShowMealInfoBookingController-->>BookingUi: NutricionalInfo [final]
BookingUi-->>CafeteriaUser: show weakNitricionalInfo [final]

BookingUi-->>CafeteriaUser: prompt confirmation
CafeteriaUser->BookingUi: confirmation
BookingUi->ShowMealInfoBookingController: bookingMeal(meal)
